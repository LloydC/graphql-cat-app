{"ast":null,"code":"var _jsxFileName = \"/Users/lloydchambrier/Desktop/graphql/cat-app/client/src/App.js\";\nimport React, { useState } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag';\nimport { ApolloProvider, ApolloConsumer } from 'react-apollo';\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\"\n});\n\nconst catQuery = client => {\n  client.query({\n    query: gql`\n    {\n      cats {\n        name\n      }\n    }\n    `\n  }).then(result => console.log(result.data)).catch(e => console.error(e));\n};\n\nconst createCat = (client, name) => {\n  client.mutate({\n    mutation: gql`` // mutation: gql `\n    //   {\n    //     createCat({name})\n    //   }\n    // `\n    // createCat(name: \"Lily\"){\n    //   id\n    //   name\n    // }\n\n  }).then(result => console.log(result)).catch(e => console.error(e));\n};\n\nfunction App() {\n  const [catname, setCatname] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createCat(client, catname);\n  };\n\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, \"Cat App\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: catname,\n    onChange: e => {\n      setCatname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }, \"Add Cat\")), /*#__PURE__*/React.createElement(ApolloConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, catQuery));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lloydchambrier/Desktop/graphql/cat-app/client/src/App.js"],"names":["React","useState","ApolloClient","gql","ApolloProvider","ApolloConsumer","client","uri","catQuery","query","then","result","console","log","data","catch","e","error","createCat","name","mutate","mutation","App","catname","setCatname","handleSubmit","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA8C,cAA9C;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,MAAMC,QAAQ,GAAIF,MAAD,IAAY;AAC3BA,EAAAA,MAAM,CACLG,KADD,CACO;AACLA,IAAAA,KAAK,EAAEN,GAAK;;;;;;;AADP,GADP,EASGO,IATH,CASQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,CATlB,EAUCC,KAVD,CAUOC,CAAC,IAAIJ,OAAO,CAACK,KAAR,CAAcD,CAAd,CAVZ;AAWD,CAZD;;AAcA,MAAME,SAAS,GAAG,CAACZ,MAAD,EAASa,IAAT,KAAgB;AAChCb,EAAAA,MAAM,CACLc,MADD,CACQ;AACNC,IAAAA,QAAQ,EAAElB,GAAK,EADT,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVI,GADR,EAcCO,IAdD,CAcMC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAdhB,EAeCI,KAfD,CAeOC,CAAC,IAAIJ,OAAO,CAACK,KAAR,CAAcD,CAAd,CAfZ;AAgBD,CAjBD;;AAoBA,SAASM,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMwB,YAAY,GAAIT,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACU,cAAF;AACAR,IAAAA,SAAS,CAACZ,MAAD,EAASiB,OAAT,CAAT;AACD,GAHD;;AAKA,sBACC,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEjB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAM,IAAA,QAAQ,EAAEmB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEF,OAAtC;AAA+C,IAAA,QAAQ,EAAGP,CAAD,IAAK;AAACQ,MAAAA,UAAU,CAACR,CAAC,CAACW,MAAF,CAASC,KAAV,CAAV;AAA2B,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFF,eAME,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,QADH,CANF,CADD;AAYD;;AAED,eAAec,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag'\nimport { ApolloProvider, ApolloConsumer} from 'react-apollo'\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\"\n})\n\nconst catQuery = (client) => {\n  client\n  .query({\n    query: gql `\n    {\n      cats {\n        name\n      }\n    }\n    `\n  }).then(result => console.log(result.data))\n  .catch(e => console.error(e))\n}\n\nconst createCat = (client, name)=>{\n  client\n  .mutate({\n    mutation: gql ``\n      // mutation: gql `\n      //   {\n      //     createCat({name})\n      //   }\n      // `\n      // createCat(name: \"Lily\"){\n      //   id\n      //   name\n      // }\n      \n  })\n  .then(result => console.log(result))\n  .catch(e => console.error(e))\n}\n\n\nfunction App() {\n  const [catname, setCatname] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    createCat(client, catname)\n  }\n\n  return (\n   <ApolloProvider client={client}>\n     Cat App\n     <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" value={catname} onChange={(e)=>{setCatname(e.target.value)}}/>\n       <button type=\"submit\">Add Cat</button>\n     </form>\n     <ApolloConsumer>\n       {catQuery}\n     </ApolloConsumer>\n   </ApolloProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}